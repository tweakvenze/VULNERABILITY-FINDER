#ifndef INCLUDE_EXPLOIT_BUFFER_OVERFLOW_H_
#define INCLUDE_EXPLOIT_BUFFER_OVERFLOW_H_

#include <iostream>
#include <fstream>

#include "Sock.h"
#include "../utils.h"
#include "XMLparser.h"
#include "pos_thread.h"

#include <vector>

void Buffer_overflow_init(std::string&, int ,int);

class Buffer_overflow{
private :
	std::string line, response,hostname, headers, temp_string,new_path_parameter ,extra_data = "", test_string = "";
	std::vector<std::string> return_vector;
	bool has_submit_value_field, STOP_OVERFLOW , has_input_field = false;

	int page_method, PORT_NUMBER,status_code = 0,flag = 0;
	size_t test_string_int_size = 0,test_string_inc_size = 10,test_string_curr_size;

	pthread_mutex_t *lock;
	Sock *buffer_overflow_sock;

	void get_Request();
	void post_Request();
	void getstring();
	void getTempString();
	void get_data_field(std::string &);
	void print_buffer_overflow(std::string &,int);

public:
	Buffer_overflow(std::string &,int,void*, std::string &);
	void buffer_on_inputfield();
	~Buffer_overflow();
};

#endif /* INCLUDE_EXPLOIT_BUFFER_OVERFLOW_H_ */
